name: Deploy Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  windows_msvc:
    name: Windows | MSVC
    runs-on: windows-2019

    strategy:
      fail-fast: false
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Generate Project
        run: cmake -B Build/Release -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 16 2019" -A x64

      - name: Build Refureku
        run: cmake --build Build/Release --config Release --verbose

      - name: Run Tests
        run: cd Build/Release && ctest -C Release -V

      - name: Setup Binaries Artifact
        run: |
          mkdir RefurekuBinaries
          mkdir RefurekuBinaries/Windows/
          mkdir RefurekuBinaries/Windows/Bin
          mkdir RefurekuBinaries/Windows/Lib

          mv Build/Release/Bin/Release/RefurekuGenerator.exe RefurekuBinaries/Windows/Bin/
          mv Build/Release/Bin/Release/Refureku.dll RefurekuBinaries/Windows/Bin/
          mv Refureku/Generator/ThirdParty/Kodgen/Kodgen/ThirdParty/x64/Shared/libclang.dll RefurekuBinaries/Windows/Bin/
          mv Refureku/Generator/ThirdParty/Kodgen/Kodgen/ThirdParty/x64/Bin/vswhere.exe RefurekuBinaries/Windows/Bin/

          mv Build/Release/Lib/Release/Refureku.lib RefurekuBinaries/Windows/Lib/

      - name: Upload Binaries Artifact
        uses: actions/upload-artifact@v2
        with:
          name: RefurekuBinaries
          path: ./RefurekuBinaries
          retention-days: 7

  linux_gcc_clang:
    name: Linux | Clang
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        compiler: [clang++-11]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install suitable compiler
        run: sudo apt-get install ${{ matrix.compiler }}

      - name: Install ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.8
        with:
          cmake-version: '3.15.0'

      - name: Substitute Compiler Name
        uses: bluwy/substitute-string-action@v1
        id: replace_compiler
        with:
          _input-text: ${{ matrix.compiler }}
          clang++: 'clang'
          g++: 'gcc'

      - name: Setup Compiler
        run: |
          echo "CC=${{ steps.replace_compiler.outputs.result }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.compiler }}" >> $GITHUB_ENV

      - name: Generate Project
        run: cmake -B Build/Release -DCMAKE_BUILD_TYPE=Release -G "Ninja"

      - name: Build Refureku
        run: cmake --build Build/Release --config Release --verbose

      - name: Run Tests
        run: |
          cd Build/Release && ctest -C Release -V

      - name: Install patchelf
        run: sudo apt-get install patchelf

      - name: Patch ELF RUNPATH
        run: patchelf --set-rpath "\$ORIGIN" Build/Release/Bin/RefurekuGenerator
  
      - name: Setup Binaries Artifact
        run: |
          mkdir RefurekuBinaries
          mkdir RefurekuBinaries/Linux/
          mkdir RefurekuBinaries/Linux/Bin
          mv Refureku/Generator/ThirdParty/Kodgen/Kodgen/ThirdParty/x64/Shared/libclang.so.12 RefurekuBinaries/Linux/Bin/libclang.so.12
          mv Build/Release/Bin/RefurekuGenerator RefurekuBinaries/Linux/Bin/
          mv Build/Release/Bin/libRefureku.so RefurekuBinaries/Linux/Bin/

          mv Refureku/Library/Include/Public RefurekuBinaries/Include
          mv Build/Release/Bin/RefurekuSettings.toml RefurekuBinaries/
          mv README.md RefurekuBinaries/
          
          mv LICENSE.md RefurekuBinaries/
          mv Refureku/Generator/ThirdParty/Kodgen/Kodgen/ThirdParty/Licenses RefurekuBinaries/

      - name: Upload Binaries Artifact
        uses: actions/upload-artifact@v2
        with:
          name: RefurekuBinaries
          path: ./RefurekuBinaries
          retention-days: 7

  macos:
    name: MacOS | Clang
    runs-on: macos-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.8
        with:
          cmake-version: '3.15.0'

      - name: Generate Project
        run: cmake -B Build/Release -DCMAKE_BUILD_TYPE=Release -G "Ninja"

      - name: Build Refureku
        run: cmake --build Build/Release --config Release --verbose

      - name: Run Tests
        run: cd Build/Release && ctest -C Release -V

        # The 2nd command (install_name_tool -change) is probably wrong since the first argument (libclang.dylib) is not a valid path in the exe
      - name: Patch RPATH
        run: |
          install_name_tool -add_rpath @executable_path Build/Release/Bin/RefurekuGenerator
          install_name_tool -change libclang.dylib @rpath/libclang.dylib Build/Release/Bin/RefurekuGenerator

      - name: Setup Binaries Artifact
        run: |
          mkdir RefurekuBinaries
          mkdir RefurekuBinaries/Mac/
          mkdir RefurekuBinaries/Mac/Bin
          mv Build/Release/Bin/RefurekuGenerator RefurekuBinaries/Mac/Bin/
          mv Build/Release/Bin/libRefureku.dylib RefurekuBinaries/Mac/Bin/
          mv Refureku/Generator/ThirdParty/Kodgen/Kodgen/ThirdParty/x64/Shared/libclang.dylib RefurekuBinaries/Mac/Bin/

      - name: Upload Binaries Artifact
        uses: actions/upload-artifact@v2
        with:
          name: RefurekuBinaries
          path: ./RefurekuBinaries
          retention-days: 7


  deploy_release_binaries:
    name: Deploy Binaries
    runs-on: ubuntu-latest
    needs: [windows_msvc, linux_gcc_clang, macos]

    steps:
      - name: Install zip
        run: sudo apt-get install zip

      - name: Compute version
        id: version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        
      - name: Setup Env
        id: env_vars
        run: |
          echo ::set-output name=LINUX_ARCHIVE_PATH::rfk_${{steps.version.outputs.VERSION}}_linux.tar.gz
          echo ::set-output name=WIN_ARCHIVE_PATH::rfk_${{steps.version.outputs.VERSION}}_windows.zip
          echo ::set-output name=MAC_ARCHIVE_PATH::rfk_${{steps.version.outputs.VERSION}}_macos.tar.gz

      - name: Fetch Binaries Artifacts
        uses: actions/download-artifact@v2
        with:
          name: RefurekuBinaries
          path: ./RefurekuBinaries

      - name: Build Linux Binaries Archive
        run: |
          cp -R RefurekuBinaries/Include RefurekuBinaries/Licenses RefurekuBinaries/Linux
          cp RefurekuBinaries/* RefurekuBinaries/Linux 2>/dev/null || :
          tar -czvf ${{steps.env_vars.outputs.LINUX_ARCHIVE_PATH}} --directory RefurekuBinaries/Linux .

      - name: Build Windows Binaries Archive
        run: |
          cp -R RefurekuBinaries/Include RefurekuBinaries/Licenses RefurekuBinaries/Windows
          cp RefurekuBinaries/* RefurekuBinaries/Windows 2>/dev/null || :
          (cd RefurekuBinaries/Windows && zip -r - .) > ${{steps.env_vars.outputs.WIN_ARCHIVE_PATH}}

      - name: Build MacOS Binaries Archive
        run: |
          cp -R RefurekuBinaries/Include RefurekuBinaries/Licenses RefurekuBinaries/Mac
          cp RefurekuBinaries/* RefurekuBinaries/Mac 2>/dev/null || :
          tar -czvf ${{steps.env_vars.outputs.MAC_ARCHIVE_PATH}} --directory RefurekuBinaries/Mac .

      - name: Publish Release Draft
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            ${{steps.env_vars.outputs.LINUX_ARCHIVE_PATH}}
            ${{steps.env_vars.outputs.WIN_ARCHIVE_PATH}}
            ${{steps.env_vars.outputs.MAC_ARCHIVE_PATH}}