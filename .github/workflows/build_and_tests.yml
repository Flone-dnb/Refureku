name: Build & Tests

on:
  push:
    branches:
      - master
      - dev
      - CI-setup
      - rework
  workflow_dispatch:

jobs:
  # build_windows_msvc:
  #   name: Windows | MSVC
  #   runs-on: windows-latest

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       build_config: [Release, Debug]

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: 'recursive'

  #     - name: Generate Project
  #       run: cmake -B Build/${{ matrix.build_config }} -DCMAKE_BUILD_TYPE=${{ matrix.build_config }} -DRFK_DEV=1 -DGEN_PROPERTY_RTTI=1 -G "Visual Studio 16 2019" -A x64

  #     - name: Build Refureku
  #       run: cmake --build Build/${{ matrix.build_config }} --config ${{ matrix.build_config }} --verbose

  #     - name: Run Tests
  #       run: cd Build/${{ matrix.build_config }} && ctest -C ${{ matrix.build_config }} -V

  #     - name: Setup Binaries Archive
  #       if: github.ref == 'refs/heads/CI-setup' && (startsWith(github.event.ref, 'refs/tags/v') || ) #TODO: Replace CI-setup by master

  # build_linux_gcc_clang:
  #   name: Linux | Clang/GCC
  #   runs-on: ubuntu-latest

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       build_config: [Release, Debug]
  #       compiler: [clang++-7, clang++-8, clang++-9, clang++-10, clang++-11, g++-8, g++-9, g++-10, g++-11]

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: 'recursive'

  #     - name: Install suitable compiler
  #       run: sudo apt-get install ${{ matrix.compiler }}

  #     - name: Install ninja
  #       uses: seanmiddleditch/gha-setup-ninja@master

  #     - name: Install CMake
  #       uses: jwlawson/actions-setup-cmake@v1.8
  #       with:
  #         cmake-version: '3.15.0'

  #     - name: Install Valgrind
  #       run: sudo apt-get install valgrind

  #     - name: Substitute Compiler Name
  #       uses: bluwy/substitute-string-action@v1
  #       id: replace_compiler
  #       with:
  #         _input-text: ${{ matrix.compiler }}
  #         clang++: 'clang'
  #         g++: 'gcc'

  #     - name: Setup Compiler
  #       run: |
  #         echo "CC=${{ steps.replace_compiler.outputs.result }}" >> $GITHUB_ENV
  #         echo "CXX=${{ matrix.compiler }}" >> $GITHUB_ENV

  #     - name: Generate Project
  #       run: cmake -B Build/${{ matrix.build_config }} -DCMAKE_BUILD_TYPE=${{ matrix.build_config }} -DRFK_DEV=1 -DGEN_PROPERTY_RTTI=1 -G "Ninja"

  #     - name: Build Refureku
  #       run: cmake --build Build/${{ matrix.build_config }} --config ${{ matrix.build_config }} --verbose

  #     - name: Run Tests
  #       run: |
  #         cd Build/${{ matrix.build_config }} && ctest -C ${{ matrix.build_config }} -T memcheck -V
  #         cat ./Testing/Temporary/MemoryChecker.*.log
  
  build_macos:
    name: MacOS | Clang
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        build_config: [Release, Debug]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.8
        with:
          cmake-version: '3.15.0'

      - name: Install tree
        run: brew install tree

      - name: Generate Project
        run: cmake -B Build/${{ matrix.build_config }} -DCMAKE_BUILD_TYPE=${{ matrix.build_config }} -DRFK_DEV=1 -DGEN_PROPERTY_RTTI=1 -G "Ninja"

      - name: Build Refureku
        run: cmake --build Build/${{ matrix.build_config }} --config ${{ matrix.build_config }} --verbose

      - name: Run Tests
        run: cd Build/${{ matrix.build_config }} && ctest -C ${{ matrix.build_config }} -V

      - name: Setup Binaries Archive (Release)
        #TODO: Replace CI-setup by master
        if: matrix.build_config == 'Release'
#        if: startsWith(github.event.ref, 'refs/tags/v') || (github.ref == 'refs/heads/CI-setup' && github.event_name == 'workflow_dispatch')  #Push tag or manual trigger on master branch
        #TODO: Move libclang.dylib?? #TODO: Move vswhere on windows
        #TODO: Move libclang.lib on windows
        run: |
          mkdir RefurekuBinaries
          mkdir RefurekuBinaries/Mac/
          mkdir RefurekuBinaries/Mac/Bin
          mkdir RefurekuBinaries/Mac/Lib
          mv Build/Release/Bin/RefurekuGenerator RefurekuBinaries/Mac/Bin/
          mv Build/Release/Bin/libRefureku.dylib RefurekuBinaries/Mac/Bin/
          mv Build/Release/Lib/libKodgen.a RefurekuBinaries/Mac/Lib/libKodgenRelease.a
          mv Build/Release/Lib/libRefurekuGeneratorLib.a RefurekuBinaries/Mac/Lib/libRefurekuGeneratorLibRelease.a

          mv Refureku/Library/Include/Public RefurekuBinaries/Include
          mv Build/Release/Bin/RefurekuSettings.toml RefurekuBinaries/
          mv LICENSE.md RefurekuBinaries/
          mv README.md RefurekuBinaries/
          tree -f RefurekuBinaries

      - name: Setup Binaries Archive (Debug)
        if: matrix.build_config == 'Debug'
        run: |
          mkdir -p RefurekuBinaries/Mac/Lib
          mv Build/Debug/Lib/libKodgen.a RefurekuBinaries/Mac/Lib/libKodgenDebug.a
          mv Build/Debug/Lib/libRefurekuGeneratorLib.a RefurekuBinaries/Mac/Lib/libRefurekuGeneratorLibDebug.a
          tree -f RefurekuBinaries

      - name: Update Binaries Artifact
#        if: startsWith(github.event.ref, 'refs/tags/v') || (github.ref == 'refs/heads/CI-setup' && github.event_name == 'workflow_dispatch')  #Push tag or manual trigger on master branch
        uses: actions/upload-artifact@v2
        with:
          name: RefurekuBinaries
          path: ./RefurekuBinaries
          retention-days: 7


  deploy_binaries:
    name: Deploy binaries
    runs-on: ubuntu-latest
    needs: [build_macos]  #TODO: Add other os later

    steps:
      - name: Install tree      #TODO: Remove this
        run: brew install tree

      - name: Fetch Binaries Artifacts
        uses: actions/download-artifact@v2
        with:
          name: RefurekuBinaries
          path: ./RefurekuBinaries

      - name: Deploy binaries
    #TODO: Replace CI-setup by master
#      if: startsWith(github.event.ref, 'refs/tags/v') || (github.ref == 'refs/heads/CI-setup' && github.event_name == 'workflow_dispatch')
        run: tree -f RefurekuBinaries